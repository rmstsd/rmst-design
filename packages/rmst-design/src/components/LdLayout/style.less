.rt-ld-layout {
  position: relative;
  height: 500px;
  display: flex;

  .source-indicator {
    position: fixed;
    top: 0;
    left: 0;
    width: 100px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 1px solid #007bff48;
    background-color: #fff;
    pointer-events: none;
    transform: translate(-50%, 10px);
  }

  & > * {
    flex-shrink: 0;
    flex-grow: 1;
  }

  .node-item {
    display: flex;
    gap: 10px;
    border: 1px solid #ebebeb;

    & > * {
      flex-basis: 0;
      flex-shrink: 0;
      flex-grow: 1;
    }
  }

  .tabs {
    display: flex;
    flex-direction: column;
    border: 1px solid #ebebeb;

    .tab-header {
      height: 32px;
      display: flex;
      gap: 8px;
      padding: 0 8px;
      border-bottom: 1px solid #ebebeb;

      .tab-item {
        position: relative;

        .tab-item-content {
          height: 100%;
          display: flex;
          align-items: center;
          gap: 8px;
          padding: 0 16px;
          border-bottom: 1px solid transparent;
          cursor: pointer;

          &.selected {
            color: blue;
            border-bottom: 1px solid blue;
          }
        }

        .tab-item-indicator {
          position: absolute;
          right: -4px;
          width: 8px;
          background-color: #007bff48;
          top: 0;
          bottom: 0;

          &.left {
            left: -4px;
          }

          &.over {
            background-color: blue;
          }
        }
      }
    }

    .tab-content {
      padding: 8px;
      flex-grow: 1;
      position: relative;

      .indicator {
        --size: 40px;
        position: absolute;
        width: var(--size);
        height: var(--size);
        border: 1px solid #c0c0c0;

        &.over {
          background-color: blue;
        }

        &.top {
          top: 0;
          left: calc(50% - var(--size) / 2);
        }

        &.right {
          right: 0;
          top: calc(50% - var(--size) / 2);
        }

        &.bottom {
          bottom: 0;
          left: calc(50% - var(--size) / 2);
        }

        &.left {
          top: calc(50% - var(--size) / 2);
          left: 0;
        }
      }
    }
  }
}