@import '../../../style/var.less';
@import './token.less';
// 
@btn-prefix-cls: ~'@{prefixCls}-btn';

.@{btn-prefix-cls} {
  display: inline-flex;
  align-items: center;
  padding: 0 12px;
  cursor: pointer;
  border: 1px solid transparent;
  border-radius: 4px;
  .propertyTransition(background-color, color, border-color);

  &-loading-wrapper {
    display: inline-flex;
    overflow: hidden;

    .loading-icon-wrapper {
      display: inline-flex;
      margin-right: 2px;
    }
  }
}

.btn-size(@size) {
  .@{btn-prefix-cls}-size-@{size} {
    @current: @sizeMap[@@size];
    // 
    height: @current[height];
    font-size: @current[font-size];

    .rmst-btn-loading-wrapper {
      height: @current[height] - 12px;

      .loading-icon-wrapper,
      .loading-icon {
        height: 100%;
      }
    }
  }
}

.btn-type(@type) {
  .@{btn-prefix-cls}-@{type}:not(.@{btn-prefix-cls}-disabled) {
    @current: @typeMap[@@type][@quiet];
    // 
    background-color: @current[background-color];
    color: @current[color];
    border-color: @current[border-color];

    &:hover:not(.@{btn-prefix-cls}-loading) {
      @current: @typeMap[@@type][@hover];
      // 
      background-color: @current[background-color];
      color: @current[color];
      border-color: @current[border-color];
    }

    &:active {
      @current: @typeMap[@@type][@active];
      // 
      background-color: @current[background-color];
      color: @current[color];
      border-color: @current[border-color];
    }
  }

  .@{btn-prefix-cls}-@{type}.@{btn-prefix-cls}-disabled {
    @current: @typeMap[@@type][@disabled];
    // 
    background-color: @current[background-color];
    color: @current[color];
    border-color: @current[border-color];
    cursor: not-allowed;
  }

  .@{btn-prefix-cls}-@{type}.@{btn-prefix-cls}-loading {
    @current: @typeMap[@@type][@disabled];
    // 
    background-color: @current[background-color];
    color: @current[color];
    border-color: @current[border-color];
    cursor: default;
  }
}

.btn-size(small);
.btn-size(default);
.btn-size(large);
// 
.btn-type(primary);
.btn-type(outline);
.btn-type(text);

/* 基础旋转样式 */
.rotate-continuously {
  animation: rotate 1s linear infinite;
}

/* 定义旋转动画关键帧 */
@keyframes rotate {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}